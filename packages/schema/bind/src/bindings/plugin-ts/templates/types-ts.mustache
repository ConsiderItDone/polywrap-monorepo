import {
  Client,
  InvokeApiResult
} from "@web3api/core-js";

type UInt = number;
type UInt8 = number;
type UInt16 = number;
type UInt32 = number;
type Int = number;
type Int8 = number;
type Int16 = number;
type Int32 = number;
type Bytes = ArrayBuffer;
type BigInt = string;
type String = string;
type Boolean = boolean;

{{#objectTypes}}
export interface {{type}} {
  {{#properties}}
  {{name}}{{^required}}?{{/required}}: {{#toTypescript}}{{toGraphQLType}}{{/toTypescript}};
  {{/properties}}
}
{{/objectTypes}}

{{#enumTypes}}
export enum {{type}} {
  {{#constants}}
  {{.}}{{^last}},{{/last}}
  {{/constants}}
}
{{/enumTypes}}

/// Imported Objects START ///

{{#importedObjectTypes}}
/* URI: "{{uri}}" */
export interface {{type}} {
  {{#properties}}
  {{name}}{{^required}}?{{/required}}: {{#toTypescript}}{{toGraphQLType}}{{/toTypescript}};
  {{/properties}}
}
{{/importedObjectTypes}}

{{#importedEnumTypes}}
/* URI: "{{uri}}" */
export enum {{type}} {
  {{#constants}}
  {{.}}{{^last}},{{/last}}
  {{/constants}}
}
{{/importedEnumTypes}}

/// Imported Objects END ///

/// Imported Queries START ///

{{#importedQueryTypes}}
{{#methods}}
/* URI: "{{parent.uri}}" */
interface {{parent.type}}_Input_{{name}} extends Record<string, unknown> {
  {{#arguments}}
  {{name}}{{^required}}?{{/required}}: {{#toTypescript}}{{toGraphQLType}}{{/toTypescript}};
  {{/arguments}}
}
{{/methods}}

export const {{type}} = {
  {{#methods}}
  {{name}}: async (
    input: {{parent.type}}_Input_{{name}},
    client: Client
  ): Promise<InvokeApiResult<{{#return}}{{#toTypescript}}{{toGraphQLType}}{{/toTypescript}}{{/return}}>> => {
    return client.invoke<{{#return}}{{#toTypescript}}{{toGraphQLType}}{{/toTypescript}}{{/return}}>({
      uri: "{{parent.uri}}",
      module: "{{type}}",
      method: "{{name}}",
      input
    });
  }
  {{/methods}}
}
{{/importedQueryTypes}}

/// Imported Queries END ///
