import {
  w3_invoke_args,
  w3_invoke,
  w3_load_env,
  w3_abort,
  InvokeArgs
} from "@web3api/wasm-as";
{{#queryTypes}}
{{#methods.length}}
import {
  {{#methods}}
  {{name}}Wrapped{{^last}},{{/last}}
  {{/methods}}
} from "./{{type}}/wrapped";
{{/methods.length}}
{{/queryTypes}}
{{#environment.query.sanitized}}
import {
  env
} from "./environment";
import {
  QueryEnv
} from "./QueryEnv";
{{/environment.query.sanitized}}
{{#environment.mutation.sanitized}}
import {
  env
} from "./environment";
import {
  MutationEnv
} from "./MutationEnv";
{{/environment.mutation.sanitized}}

export function _w3_invoke(method_size: u32, args_size: u32): bool {
  const args: InvokeArgs = w3_invoke_args(
    method_size,
    args_size
  );

  {{#queryTypes}}
  {{#methods}}
  {{^first}}else {{/first}}if (args.method == "{{name}}") {
    return w3_invoke(args, {{name}}Wrapped);
  }
  {{/methods}}
  {{/queryTypes}}
  else {
    return w3_invoke(args, null);
  }
}

{{#environment.query.sanitized}}
export function _w3_load_env(environment_size: u32): void {
  const environmentBuf = w3_load_env(environment_size);
  env = QueryEnv.fromBuffer(environmentBuf);
}
{{/environment.query.sanitized}}
{{#environment.mutation.sanitized}}
export function _w3_load_env(environment_size: u32): void {
  const environmentBuf = w3_load_env(environment_size);
  env = MutationEnv.fromBuffer(environmentBuf);
}
{{/environment.mutation.sanitized}}

export function w3Abort(
  msg: string | null,
  file: string | null,
  line: u32,
  column: u32
): void {
  w3_abort(
    msg ? msg : "",
    file ? file : "",
    line,
    column
  );
}
