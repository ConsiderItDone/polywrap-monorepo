{{#required}}
let mut value = {{#toUpper}}{{type}}{{/toUpper}}::_MAX_;
if reader.is_next_string() {
    value = get_{{#toLower}}{{type}}{{/toLower}}_value(&reader.read_string())
        .expect("Failed to get {{#toUpper}}{{type}}{{/toUpper}} value");
} else {
    value = {{#toUpper}}{{type}}{{/toUpper}}::try_from(reader.read_i32().unwrap())
        .expect("Failed to convert i32 to {{#toUpper}}{{type}}{{/toUpper}}");
    sanitize_{{#toLower}}{{type}}{{/toLower}}_value(value as i32)
        .expect("Failed to sanitize {{#toUpper}}{{type}}{{/toUpper}}");
}
{{/required}}
{{^required}}
let mut value: {{#toWasm}}{{toGraphQLType}}{{/toWasm}} = None;
if !reader.is_next_nil() {
    if reader.is_next_string() {
        value = Some(get_{{#toLower}}{{type}}{{/toLower}}_value(&reader.read_string())
            .expect("Failed to get {{#toWasm}}{{toGraphQLType}}{{/toWasm}} value"));
    } else {
        value = Some({{#toUpper}}{{type}}{{/toUpper}}::try_from(reader.read_i32().unwrap())
            .expect("Failed to convert i32 to {{#toWasm}}{{toGraphQLType}}{{/toWasm}}"));
        sanitize_{{#toLower}}{{type}}{{/toLower}}_value(value.unwrap() as i32)
            .expect("Failed to sanitize {{#toWasm}}{{toGraphQLType}}{{/toWasm}}");
    }
} else {
    value = None;
}
{{/required}}