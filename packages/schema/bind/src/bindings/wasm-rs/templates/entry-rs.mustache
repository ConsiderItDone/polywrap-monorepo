{{#queryTypes}}
{{#methods.length}}
use crate::{
    {{#methods}}
    {{#toLower}}{{name}}{{/toLower}}_wrapped{{^last}},{{/last}}
    {{/methods}}
};
{{/methods.length}}
{{/queryTypes}}
use polywrap_wasm_rs::{
    abort,
    invoke,
    InvokeArgs,
    debug
};

#[no_mangle]
#[cfg(feature = "w3-invoke")]
pub extern "C" fn _w3_invoke(method_size: u32, args_size: u32) -> bool {
    debug::w3_debug_log("here");
    // Ensure the abort handler is properly setup
    abort::w3_abort_setup();
    debug::w3_debug_log("here");

    let args: InvokeArgs = invoke::w3_invoke_args(method_size, args_size);
    debug::w3_debug_log("here");
    debug::w3_debug_log(args.method.as_str());

    match args.method.as_str() {
        {{#queryTypes}}
        {{#methods}}
        "{{name}}" => invoke::w3_invoke(args, Some({{#toLower}}{{name}}{{/toLower}}_wrapped)),
        {{/methods}}
        {{/queryTypes}}
        _ => invoke::w3_invoke(args, None),
    }
}
