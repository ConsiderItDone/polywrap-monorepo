// @ts-noCheck
import {
  UInt,
  UInt8,
  UInt16,
  UInt32,
  Int,
  Int8,
  Int16,
  Int32,
  Bytes,
  BigInt,
  Json,
  String,
  Boolean
} from "./types";
import {
{{#objectTypes}}
  {{type}},
{{/objectTypes}}
{{#enumTypes}}
  {{type}}Enum,
  {{type}}String,
  {{type}},
{{/enumTypes}}
{{#importedObjectTypes}}
  {{type}},
{{/importedObjectTypes}}
{{#importedEnumTypes}}
  {{type}}Enum,
  {{type}}String,
  {{type}},
{{/importedEnumTypes}}
{{#importedQueryTypes}}
  {{type}},
{{/importedQueryTypes}}
} from "./types";
{{#queryTypes}}
import * as {{type}}Inputs from "./{{#lowerFirst}}{{type}}{{/lowerFirst}}";
{{/queryTypes}}
import { Client, Uri, ExtensionInvocation, Extension, ExtensionFactory, ExtensionConfig, InvokeApiOptions } from "@web3api/core-js";

// Config must extend ExtensionConfig
export interface {{#title}}{{namespace}}{{/title}}ExtensionConfig extends ExtensionConfig {
  uri: Uri | string;
}

class {{#title}}{{namespace}}{{/title}}Extension extends Extension implements {{#trimTrailing}}{{#queryTypes}}{{type}}Inputs.Module, {{/queryTypes}}{{/trimTrailing}} {

  constructor(client: Client, config: {{#title}}{{namespace}}{{/title}}ExtensionConfig) {
    super(client, config);
  }

{{#queryTypes}}
{{#methods}}
  {{name}}(
    input: {{#title}}{{type}}{{/title}}Inputs.Input_{{name}},
  ): ExtensionInvocation<{{#return}}{{#toTypescript}}{{toGraphQLType}}{{/toTypescript}}{{/return}}> {
    const options: InvokeApiOptions = {
      uri: this.uri.toString(),
      module: "{{type}}",
      method: "{{name}}",
      input: input
    };
    return {
      config: () => options,
      execute: async () => this.client.invoke<{{#return}}{{#toTypescript}}{{toGraphQLType}}{{/toTypescript}}{{/return}}>(options),
    };
  }

{{/methods}}
{{/queryTypes}}
}

export const {{#lowerFirst}}{{namespace}}{{/lowerFirst}}Extension: ExtensionFactory<{{#title}}{{namespace}}{{/title}}ExtensionConfig> = (
  opts: {{#title}}{{namespace}}{{/title}}ExtensionConfig
) => {
  return {
    factory: (client: Client) => new {{#title}}{{namespace}}{{/title}}Extension(client, opts),
  };
};